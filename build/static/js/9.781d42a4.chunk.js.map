{"version":3,"sources":["comps/authPapes/Login.js"],"names":["Login","useState","email","setEmail","pwd","setPwd","useCookies","setCookies","emailErr","setEmailErr","pwdErr","setPwdErr","navigate","useNavigate","handleAuth","e","preventDefault","fetch","method","body","JSON","stringify","password","headers","res","json","data","status","token","path","maxAge","user","window","location","href","errors","sx","style","textAlign","bgcolor","display","marginTop","component","variant","color","onSubmit","noValidate","mt","container","spacing","item","xs","autoFocus","required","fullWidth","id","label","name","autoComplete","value","onChange","target","fontWeight","type","mb","justifyContent","onClick","textDecoration","cursor","position","top","left","transform","minWidth","maxWidth","border","boxShadow","p","borderRadius"],"mappings":"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","file":"static/js/9.781d42a4.chunk.js","sourcesContent":["import Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport { Avatar, Button, Container, Grid, TextField } from \"@mui/material\";\nimport LockIcon from \"@mui/icons-material/Lock\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useCookies } from \"react-cookie\";\n// import { AuthContext } from '../../contextApi/AuthContext'\n// import { useContext } from 'react';\n\n// const Login = ({ open, handleClose }) => {\nconst Login = () => {\n  const [email, setEmail] = useState(\"\");\n  const [pwd, setPwd] = useState(\"\");\n\n  const [cookies, setCookies] = useCookies();\n\n  const [emailErr, setEmailErr] = useState(false);\n  const [pwdErr, setPwdErr] = useState(false);\n\n  // const { setIsAuth } = useContext(AuthContext)\n\n  const navigate = useNavigate();\n\n  const handleAuth = async (e) => {\n    setEmailErr(null);\n    setPwdErr(null);\n    e.preventDefault();\n    try {\n      const res = await fetch(\"https://api.shatokens.com/login\", {\n        method: \"POST\",\n        body: JSON.stringify({ email, password: pwd }),\n        headers: { \"Content-Type\": \"application/json\" },\n      });\n      const data = await res.json();\n      if (res.status === 302) {\n        setCookies(\"jwt\", data.token, { path: \"/\", maxAge: 1800 });\n        setCookies(\"user\", data.user, { path: \"/\", maxAge: 1800 });\n        window.location.href = \"/\";\n      } else {\n        throw data;\n      }\n    } catch (error) {\n      if (error.errors) {\n        if (error.errors.email) {\n          setEmailErr(error.errors.email);\n        }\n        if (error.errors.password) {\n          setPwdErr(error.errors.password);\n        }\n      }\n    }\n  };\n\n  return (\n    <Container>\n      <Box sx={style}>\n        <Box sx={{ textAlign: \"center\" }}>\n          <Avatar\n            sx={{\n              bgcolor: \"secondary.main\",\n              display: \"inline-block\",\n            }}\n          >\n            <LockIcon sx={{ marginTop: \"6px\" }} />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\" sx={{ color: \"#111\" }}>\n            Log In\n          </Typography>\n        </Box>\n        <Box\n          component=\"form\"\n          onSubmit={(e) => handleAuth(e)}\n          noValidate\n          sx={{ mt: 3 }}\n        >\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <TextField\n                autoFocus\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"none\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              <p style={{ fontWeight: \"bold\", color: \"red\" }}>{emailErr}</p>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"new-password\"\n                value={pwd}\n                onChange={(e) => setPwd(e.target.value)}\n              />\n              <p style={{ fontWeight: \"bold\", color: \"red\" }}>{pwdErr}</p>\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Sign In\n          </Button>\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <div\n                onClick={() => navigate(\"/signup\")}\n                style={{\n                  color: \"blue\",\n                  textDecoration: \"underline\",\n                  cursor: \"pointer\",\n                }}\n                variant=\"body2\"\n              >\n                Don't have a account? Sign up\n              </div>\n            </Grid>\n          </Grid>\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <div\n                onClick={() => navigate(\"/\")}\n                style={{\n                  color: \"blue\",\n                  textDecoration: \"underline\",\n                  cursor: \"pointer\",\n                  marginTop: \".5em\",\n                }}\n                variant=\"body2\"\n              >\n                Home\n              </div>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n\nexport default Login;\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  minWidth: 300,\n  maxWidth: 350,\n  bgcolor: \"#fff\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n  borderRadius: \"10px\",\n};\n"],"sourceRoot":""}