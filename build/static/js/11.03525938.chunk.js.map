{"version":3,"sources":["comps/authPapes/Signup.js"],"names":["Signup","useState","email","setEmail","pwd","setPwd","fName","setFName","lName","setLName","emailErr","setEmailErr","pwdErr","setPwdErr","useCookies","setCookies","navigate","useNavigate","handleAuth","e","preventDefault","fetch","method","body","JSON","stringify","password","firstName","lastName","headers","res","json","data","status","token","path","maxAge","user","window","location","href","console","log","errors","sx","style","textAlign","bgcolor","display","marginTop","component","variant","color","onSubmit","noValidate","mt","container","spacing","item","xs","sm","autoComplete","name","required","fullWidth","id","label","autoFocus","value","onChange","target","type","fontWeight","mb","justifyContent","onClick","textDecoration","cursor","position","top","left","transform","minWidth","maxWidth","border","boxShadow","p","borderRadius"],"mappings":"uPAsLeA,UA3KA,WACb,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAsBF,mBAAS,IAA/B,mBAAOG,EAAP,KAAYC,EAAZ,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KACA,EAA0BN,mBAAS,IAAnC,mBAAOO,EAAP,KAAcC,EAAd,KACA,EAAgCR,oBAAS,GAAzC,mBAAOS,EAAP,KAAiBC,EAAjB,KACA,EAA4BV,oBAAS,GAArC,mBAAOW,EAAP,KAAeC,EAAf,KAEA,EAA8BC,cAA9B,mBAAgBC,GAAhB,WAEMC,EAAWC,cAIXC,EAAU,iDAAG,WAAOC,GAAP,0FACjBR,EAAY,MACZE,EAAU,MACVM,EAAEC,iBAHe,kBAKGC,MAAM,mCAAoC,CAC1DC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CACnBvB,QACAwB,SAAUtB,EACVuB,UAAWrB,EACXsB,SAAUpB,IAEZqB,QAAS,CAAE,eAAgB,sBAbd,cAKTC,EALS,gBAeIA,EAAIC,OAfR,UAeTC,EAfS,OAgBI,MAAfF,EAAIG,OAhBO,iBAiBblB,EAAW,MAAOiB,EAAKE,MAAO,CAAEC,KAAM,IAAKC,OAAQ,OACnDrB,EAAW,OAAQiB,EAAKK,KAAM,CAAEF,KAAM,IAAKC,OAAQ,OACnDE,OAAOC,SAASC,KAAO,IAnBV,8BAsBPR,EAtBO,0DAyBfS,QAAQC,IAAR,MACI,KAAMC,SACJ,KAAMA,OAAOzC,OACfS,EAAY,KAAMgC,OAAOzC,OAEvB,KAAMyC,OAAOjB,UACfb,EAAU,KAAM8B,OAAOjB,WA/BZ,0DAAH,sDAqChB,OACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAKkB,GAAIC,EAAT,UACE,eAAC,IAAD,CAAKD,GAAI,CAAEE,UAAW,UAAtB,UACE,cAAC,IAAD,CACEF,GAAI,CACFG,QAAS,iBACTC,QAAS,gBAHb,SAME,cAAC,IAAD,CAAUJ,GAAI,CAAEK,UAAW,WAE7B,cAAC,IAAD,CAAYC,UAAU,KAAKC,QAAQ,KAAKP,GAAI,CAAEQ,MAAO,QAArD,wBAKF,eAAC,IAAD,CACEF,UAAU,OACVG,SAAU,SAAClC,GAAD,OAAOD,EAAWC,EAAlB,EACVmC,YAAU,EACVV,GAAI,CAAEW,GAAI,GAJZ,UAME,eAAC,IAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACE,cAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC,IAAD,CACEC,aAAa,aACbC,KAAK,YACLC,UAAQ,EACRC,WAAS,EACTC,GAAG,YACHC,MAAM,aACNC,WAAS,EACTC,MAAO9D,EACP+D,SAAU,SAAClD,GAAD,OAAOZ,EAASY,EAAEmD,OAAOF,MAAzB,MAGd,cAAC,IAAD,CAAMV,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,SACE,cAAC,IAAD,CACEG,UAAQ,EACRC,WAAS,EACTC,GAAG,WACHC,MAAM,YACNJ,KAAK,WACLD,aAAa,cACbQ,SAAU,SAAClD,GAAD,OAAOV,EAASU,EAAEmD,OAAOF,MAAzB,MAGd,eAAC,IAAD,CAAMV,MAAI,EAACC,GAAI,GAAf,UACE,cAAC,IAAD,CACEI,UAAQ,EACRC,WAAS,EACTO,KAAK,QACLN,GAAG,QACHC,MAAM,gBACNJ,KAAK,QACLD,aAAa,OACbQ,SAAU,SAAClD,GAAD,OAAOhB,EAASgB,EAAEmD,OAAOF,MAAzB,IAEZ,mBAAGvB,MAAO,CAAE2B,WAAY,OAAQpB,MAAO,OAAvC,SAAiD1C,OAEnD,eAAC,IAAD,CAAMgD,MAAI,EAACC,GAAI,GAAf,UACE,cAAC,IAAD,CACEI,UAAQ,EACRC,WAAS,EACTF,KAAK,WACLI,MAAM,WACNK,KAAK,WACLN,GAAG,WACHJ,aAAa,eACbQ,SAAU,SAAClD,GAAD,OAAOd,EAAOc,EAAEmD,OAAOF,MAAvB,IAEZ,mBAAGvB,MAAO,CAAE2B,WAAY,OAAQpB,MAAO,OAAvC,SAAiDxC,UAGrD,cAAC,IAAD,CACE2D,KAAK,SACLP,WAAS,EACTb,QAAQ,YACRP,GAAI,CAAEW,GAAI,EAAGkB,GAAI,GAJnB,qBAQA,cAAC,IAAD,CAAMjB,WAAS,EAACkB,eAAe,WAA/B,SACE,cAAC,IAAD,CAAMhB,MAAI,EAAV,SACE,qBACEiB,QAAS,kBAAM3D,EAAS,SAAf,EACT6B,MAAO,CACLO,MAAO,OACPwB,eAAgB,YAChBC,OAAQ,WAEV1B,QAAQ,QAPV,kDAaJ,cAAC,IAAD,CAAMK,WAAS,EAACkB,eAAe,WAA/B,SACE,cAAC,IAAD,CAAMhB,MAAI,EAAV,SACE,qBACEiB,QAAS,kBAAM3D,EAAS,IAAf,EACT6B,MAAO,CACLO,MAAO,OACPwB,eAAgB,YAChBC,OAAQ,UACR5B,UAAW,QAEbE,QAAQ,QARV,6BAkBb,EAID,IAAMN,EAAQ,CACZiC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,SAAU,IACVC,SAAU,IACVpC,QAAS,OACTqC,OAAQ,iBACRC,UAAW,GACXC,EAAG,EACHC,aAAc,O","file":"static/js/11.03525938.chunk.js","sourcesContent":["import Box from \"@mui/material/Box\";\nimport Typography from \"@mui/material/Typography\";\nimport { Avatar, Button, Container, Grid, TextField } from \"@mui/material\";\nimport LockIcon from \"@mui/icons-material/Lock\";\n// import { AuthContext } from '../../contextApi/AuthContext'\nimport { useContext, useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\nimport { useNavigate } from \"react-router-dom\";\n// import { Handshake } from '@mui/icons-material';\n\n// const Signup = ({ open, handleClose }) => {\nconst Signup = () => {\n  const [email, setEmail] = useState(\"\");\n  const [pwd, setPwd] = useState(\"\");\n  const [fName, setFName] = useState(\"\");\n  const [lName, setLName] = useState(\"\");\n  const [emailErr, setEmailErr] = useState(false);\n  const [pwdErr, setPwdErr] = useState(false);\n\n  const [cookies, setCookies] = useCookies();\n\n  const navigate = useNavigate();\n\n  // const { setIsAuth } = useContext(AuthContext);\n\n  const handleAuth = async (e) => {\n    setEmailErr(null);\n    setPwdErr(null);\n    e.preventDefault();\n    try {\n      const res = await fetch(\"https://api.shatokens.com/signup\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          email,\n          password: pwd,\n          firstName: fName,\n          lastName: lName,\n        }),\n        headers: { \"Content-Type\": \"application/json\" },\n      });\n      const data = await res.json();\n      if (res.status === 201) {\n        setCookies(\"jwt\", data.token, { path: \"/\", maxAge: 1800 });\n        setCookies(\"user\", data.user, { path: \"/\", maxAge: 1800 });\n        window.location.href = \"/\";\n        // setIsAuth(true)\n      } else {\n        throw data;\n      }\n    } catch (error) {\n      console.log(error);\n      if (error.errors) {\n        if (error.errors.email) {\n          setEmailErr(error.errors.email);\n        }\n        if (error.errors.password) {\n          setPwdErr(error.errors.password);\n        }\n      }\n    }\n  };\n\n  return (\n    <Container>\n      <Box sx={style}>\n        <Box sx={{ textAlign: \"center\" }}>\n          <Avatar\n            sx={{\n              bgcolor: \"secondary.main\",\n              display: \"inline-block\",\n            }}\n          >\n            <LockIcon sx={{ marginTop: \"6px\" }} />\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\" sx={{ color: \"#111\" }}>\n            Sign up\n          </Typography>\n        </Box>\n\n        <Box\n          component=\"form\"\n          onSubmit={(e) => handleAuth(e)}\n          noValidate\n          sx={{ mt: 3 }}\n        >\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"given-name\"\n                name=\"firstName\"\n                required\n                fullWidth\n                id=\"firstName\"\n                label=\"First Name\"\n                autoFocus\n                value={fName}\n                onChange={(e) => setFName(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                required\n                fullWidth\n                id=\"lastName\"\n                label=\"Last Name\"\n                name=\"lastName\"\n                autoComplete=\"family-name\"\n                onChange={(e) => setLName(e.target.value)}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                type=\"email\"\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"none\"\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              <p style={{ fontWeight: \"bold\", color: \"red\" }}>{emailErr}</p>\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"new-password\"\n                onChange={(e) => setPwd(e.target.value)}\n              />\n              <p style={{ fontWeight: \"bold\", color: \"red\" }}>{pwdErr}</p>\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Sign Up\n          </Button>\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <div\n                onClick={() => navigate(\"/login\")}\n                style={{\n                  color: \"blue\",\n                  textDecoration: \"underline\",\n                  cursor: \"pointer\",\n                }}\n                variant=\"body2\"\n              >\n                Already have an account? Sign in\n              </div>\n            </Grid>\n          </Grid>\n          <Grid container justifyContent=\"flex-end\">\n            <Grid item>\n              <div\n                onClick={() => navigate(\"/\")}\n                style={{\n                  color: \"blue\",\n                  textDecoration: \"underline\",\n                  cursor: \"pointer\",\n                  marginTop: \".5em\",\n                }}\n                variant=\"body2\"\n              >\n                Home\n              </div>\n            </Grid>\n          </Grid>\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n\nexport default Signup;\n\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  minWidth: 300,\n  maxWidth: 350,\n  bgcolor: \"#fff\",\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n  borderRadius: \"10px\",\n};\n"],"sourceRoot":""}